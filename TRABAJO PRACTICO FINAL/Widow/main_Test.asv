clc; clear all; close all;

% Analisis de la imagen
foto = iread('../Vision/Ejemplo1.png'); 
foto = idouble(foto);
[start_pos, end_pos] = getLineCoords(foto);

start_pos = start_pos./1000;    % Cambio de escala
end_pos = end_pos./1000;

% Parametros de inicializacion
% Del manipulador
L1 = 0.130;
L2 = 0.144;
L3 = 0.053;
L4 = 0.144;
L5 = 0.144;

% De la hoja
w_hoja = 0.2;
l_hoja = 0.15;
table_origin = [0,0.35]; %x e y de la hoja (respectivamente)
table_height = L1+0.05;

% Inicializacion del manipulador y dibujo de hoja

hold on
drawTable(w_hoja, l_hoja, table_origin(1), table_origin(2), table_height);
BlackWidow = WidowXMKII(L1,L2,L3,L4,L5,table_height,table_origin);
hold off

%% Espacio alcanzable del manipulador

hold on

% BlackWidow.showReachableSpace()

Lp = sqrt(L2^2+L3^2);    
x0 = Lp+L4+L5-0.05;
y0 = 0;
z0 = L1-0.05;

t = 0:0.5:pi*2;
T = [sin(t)*x0;cos(t)*x0;z0+t.*0]';
BlackWidow.moveWidow(T)

hold off

%% Se mueve el manipulador

if(isnan(start_pos))
    disp('No se encontraron las esquinas')
else
    
    X = [,table_origin(1)+end_pos(2)];
    Y = [table_origin(2)-start_pos(1),table_origin(2)-end_pos(1)];
    
    x0 = table_origin(1)+start_pos(2);
    y0 = table_origin(2) - start_pos(1) + l_hoja;
    xf = table_origin(1) + end_pos(2);
    yf = table_origin(2) - end_pos(1) + l_hoja;
    
    T = BlackWidow.createLineTrajectory([x0, y0],[xf, yf]);
    BlackWidow.getWidowInPosition(1)
    
    hold on
    drawTable(w_hoja, l_hoja, table_origin(1), table_origin(2), table_height);
    [~,n] = size(T);
    for i=1:n
        BlackWidow.moveWidow(T(:,i)');
    end
    BlackWidow.getWidowInPosition(0)
    hold off    
end

%%

clc
hold on
x_ = table_origin(1) + start_pos(2);
y_ = table_origin(2) - start_pos(1) + l_hoja;

BlackWidow.moveWidow([x_, y_])

Y = [table_origin(1)-start_pos(1)+l_hoja,table_origin(1)-end_pos(1)+l_hoja];
X = [table_origin(2)+start_pos(2),table_origin(2)+end_pos(2)];
Z = [table_height,table_height];

plot3(X,Y,Z);
hold off

%%

clc
hold on
x_ = table_origin(1) + end_pos(2);
y_ = table_origin(2) - end_pos(1) + l_hoja;

BlackWidow.moveWidow([x_, y_])

Y = [table_origin(1)-start_pos(1)+l_hoja,table_origin(1)-end_pos(1)+l_hoja];
X = [table_origin(2)+start_pos(2),table_origin(2)+end_pos(2)];
Z = [table_height,table_height];

plot3(X,Y,Z);
hold off

%%

clc
hold on
x_ = table_origin(1);
y_ = table_origin(2);
BlackWidow.moveWidow([x_, y_]);
hold off

%%

clc
hold on
x_ = table_origin(1)+w_hoja;
y_ = table_origin(2)+l_hoja;
BlackWidow.moveWidow([x_, y_]);
hold off

%%

clc
hold on
x_ = table_origin(1)+w_hoja;
y_ = table_origin(2);
BlackWidow.moveWidow([x_, y_]);
hold off

%%

clc
hold on
X = [table_origin(1)+start_pos(2),table_origin(1)+end_pos(2)];
Y = [table_origin(2)-start_pos(1),table_origin(2)-end_pos(1)];
Z = [table_height,table_height];
plot3(X,Y,Z);
hold off
